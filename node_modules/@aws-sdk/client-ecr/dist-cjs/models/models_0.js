"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchCheckLayerAvailabilityRequestFilterSensitiveLog = exports.InvalidLayerPartException = exports.LifecyclePolicyPreviewInProgressException = exports.UnsupportedImageTypeException = exports.ReferencedImagesNotFoundException = exports.ImageTagAlreadyExistsException = exports.ImageDigestDoesNotMatchException = exports.ImageAlreadyExistsException = exports.ScanType = exports.LifecyclePolicyPreviewNotFoundException = exports.LifecyclePolicyPreviewStatus = exports.ImageActionType = exports.LayersNotFoundException = exports.LayerInaccessibleException = exports.RepositoryFilterType = exports.ScanNotFoundException = exports.ScanStatus = exports.FindingSeverity = exports.TagStatus = exports.ImageNotFoundException = exports.ReplicationStatus = exports.RepositoryPolicyNotFoundException = exports.RepositoryNotEmptyException = exports.RegistryPolicyNotFoundException = exports.PullThroughCacheRuleNotFoundException = exports.LifecyclePolicyNotFoundException = exports.TooManyTagsException = exports.RepositoryAlreadyExistsException = exports.InvalidTagParameterException = exports.ImageTagMutability = exports.EncryptionType = exports.UnsupportedUpstreamRegistryException = exports.PullThroughCacheRuleAlreadyExistsException = exports.LimitExceededException = exports.UploadNotFoundException = exports.LayerPartTooSmallException = exports.LayerAlreadyExistsException = exports.KmsException = exports.InvalidLayerException = exports.EmptyUploadException = exports.ValidationException = exports.ScanFrequency = exports.ScanningRepositoryFilterType = exports.ScanningConfigurationFailureCode = exports.ImageFailureCode = exports.ServerException = exports.RepositoryNotFoundException = exports.InvalidParameterException = exports.LayerAvailability = exports.LayerFailureCode = void 0;
exports.RemediationFilterSensitiveLog = exports.RecommendationFilterSensitiveLog = exports.PackageVulnerabilityDetailsFilterSensitiveLog = exports.VulnerablePackageFilterSensitiveLog = exports.CvssScoreFilterSensitiveLog = exports.DescribeImageScanFindingsRequestFilterSensitiveLog = exports.DescribeImagesResponseFilterSensitiveLog = exports.ImageDetailFilterSensitiveLog = exports.ImageScanStatusFilterSensitiveLog = exports.ImageScanFindingsSummaryFilterSensitiveLog = exports.DescribeImagesRequestFilterSensitiveLog = exports.DescribeImagesFilterFilterSensitiveLog = exports.DescribeImageReplicationStatusResponseFilterSensitiveLog = exports.ImageReplicationStatusFilterSensitiveLog = exports.DescribeImageReplicationStatusRequestFilterSensitiveLog = exports.DeleteRepositoryPolicyResponseFilterSensitiveLog = exports.DeleteRepositoryPolicyRequestFilterSensitiveLog = exports.DeleteRepositoryResponseFilterSensitiveLog = exports.DeleteRepositoryRequestFilterSensitiveLog = exports.DeleteRegistryPolicyResponseFilterSensitiveLog = exports.DeleteRegistryPolicyRequestFilterSensitiveLog = exports.DeletePullThroughCacheRuleResponseFilterSensitiveLog = exports.DeletePullThroughCacheRuleRequestFilterSensitiveLog = exports.DeleteLifecyclePolicyResponseFilterSensitiveLog = exports.DeleteLifecyclePolicyRequestFilterSensitiveLog = exports.CreateRepositoryResponseFilterSensitiveLog = exports.RepositoryFilterSensitiveLog = exports.CreateRepositoryRequestFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.ImageScanningConfigurationFilterSensitiveLog = exports.EncryptionConfigurationFilterSensitiveLog = exports.CreatePullThroughCacheRuleResponseFilterSensitiveLog = exports.CreatePullThroughCacheRuleRequestFilterSensitiveLog = exports.CompleteLayerUploadResponseFilterSensitiveLog = exports.CompleteLayerUploadRequestFilterSensitiveLog = exports.BatchGetRepositoryScanningConfigurationResponseFilterSensitiveLog = exports.RepositoryScanningConfigurationFilterSensitiveLog = exports.ScanningRepositoryFilterFilterSensitiveLog = exports.RepositoryScanningConfigurationFailureFilterSensitiveLog = exports.BatchGetRepositoryScanningConfigurationRequestFilterSensitiveLog = exports.BatchGetImageResponseFilterSensitiveLog = exports.ImageFilterSensitiveLog = exports.BatchGetImageRequestFilterSensitiveLog = exports.BatchDeleteImageResponseFilterSensitiveLog = exports.ImageFailureFilterSensitiveLog = exports.BatchDeleteImageRequestFilterSensitiveLog = exports.ImageIdentifierFilterSensitiveLog = exports.BatchCheckLayerAvailabilityResponseFilterSensitiveLog = exports.LayerFilterSensitiveLog = exports.LayerFailureFilterSensitiveLog = void 0;
exports.ListTagsForResourceResponseFilterSensitiveLog = exports.ListTagsForResourceRequestFilterSensitiveLog = exports.ListImagesResponseFilterSensitiveLog = exports.ListImagesRequestFilterSensitiveLog = exports.ListImagesFilterFilterSensitiveLog = exports.InitiateLayerUploadResponseFilterSensitiveLog = exports.InitiateLayerUploadRequestFilterSensitiveLog = exports.GetRepositoryPolicyResponseFilterSensitiveLog = exports.GetRepositoryPolicyRequestFilterSensitiveLog = exports.GetRegistryScanningConfigurationResponseFilterSensitiveLog = exports.RegistryScanningConfigurationFilterSensitiveLog = exports.RegistryScanningRuleFilterSensitiveLog = exports.GetRegistryScanningConfigurationRequestFilterSensitiveLog = exports.GetRegistryPolicyResponseFilterSensitiveLog = exports.GetRegistryPolicyRequestFilterSensitiveLog = exports.GetLifecyclePolicyPreviewResponseFilterSensitiveLog = exports.LifecyclePolicyPreviewSummaryFilterSensitiveLog = exports.LifecyclePolicyPreviewResultFilterSensitiveLog = exports.LifecyclePolicyRuleActionFilterSensitiveLog = exports.GetLifecyclePolicyPreviewRequestFilterSensitiveLog = exports.LifecyclePolicyPreviewFilterFilterSensitiveLog = exports.GetLifecyclePolicyResponseFilterSensitiveLog = exports.GetLifecyclePolicyRequestFilterSensitiveLog = exports.GetDownloadUrlForLayerResponseFilterSensitiveLog = exports.GetDownloadUrlForLayerRequestFilterSensitiveLog = exports.GetAuthorizationTokenResponseFilterSensitiveLog = exports.AuthorizationDataFilterSensitiveLog = exports.GetAuthorizationTokenRequestFilterSensitiveLog = exports.DescribeRepositoriesResponseFilterSensitiveLog = exports.DescribeRepositoriesRequestFilterSensitiveLog = exports.DescribeRegistryResponseFilterSensitiveLog = exports.ReplicationConfigurationFilterSensitiveLog = exports.ReplicationRuleFilterSensitiveLog = exports.RepositoryFilterFilterSensitiveLog = exports.ReplicationDestinationFilterSensitiveLog = exports.DescribeRegistryRequestFilterSensitiveLog = exports.DescribePullThroughCacheRulesResponseFilterSensitiveLog = exports.PullThroughCacheRuleFilterSensitiveLog = exports.DescribePullThroughCacheRulesRequestFilterSensitiveLog = exports.DescribeImageScanFindingsResponseFilterSensitiveLog = exports.ImageScanFindingsFilterSensitiveLog = exports.ImageScanFindingFilterSensitiveLog = exports.AttributeFilterSensitiveLog = exports.EnhancedImageScanFindingFilterSensitiveLog = exports.ScoreDetailsFilterSensitiveLog = exports.CvssScoreDetailsFilterSensitiveLog = exports.CvssScoreAdjustmentFilterSensitiveLog = exports.ResourceFilterSensitiveLog = exports.ResourceDetailsFilterSensitiveLog = exports.AwsEcrContainerImageDetailsFilterSensitiveLog = void 0;
exports.UploadLayerPartResponseFilterSensitiveLog = exports.UploadLayerPartRequestFilterSensitiveLog = exports.UntagResourceResponseFilterSensitiveLog = exports.UntagResourceRequestFilterSensitiveLog = exports.TagResourceResponseFilterSensitiveLog = exports.TagResourceRequestFilterSensitiveLog = exports.StartLifecyclePolicyPreviewResponseFilterSensitiveLog = exports.StartLifecyclePolicyPreviewRequestFilterSensitiveLog = exports.StartImageScanResponseFilterSensitiveLog = exports.StartImageScanRequestFilterSensitiveLog = exports.SetRepositoryPolicyResponseFilterSensitiveLog = exports.SetRepositoryPolicyRequestFilterSensitiveLog = exports.PutReplicationConfigurationResponseFilterSensitiveLog = exports.PutReplicationConfigurationRequestFilterSensitiveLog = exports.PutRegistryScanningConfigurationResponseFilterSensitiveLog = exports.PutRegistryScanningConfigurationRequestFilterSensitiveLog = exports.PutRegistryPolicyResponseFilterSensitiveLog = exports.PutRegistryPolicyRequestFilterSensitiveLog = exports.PutLifecyclePolicyResponseFilterSensitiveLog = exports.PutLifecyclePolicyRequestFilterSensitiveLog = exports.PutImageTagMutabilityResponseFilterSensitiveLog = exports.PutImageTagMutabilityRequestFilterSensitiveLog = exports.PutImageScanningConfigurationResponseFilterSensitiveLog = exports.PutImageScanningConfigurationRequestFilterSensitiveLog = exports.PutImageResponseFilterSensitiveLog = exports.PutImageRequestFilterSensitiveLog = void 0;
const ECRServiceException_1 = require("./ECRServiceException");
var LayerFailureCode;
(function (LayerFailureCode) {
    LayerFailureCode["InvalidLayerDigest"] = "InvalidLayerDigest";
    LayerFailureCode["MissingLayerDigest"] = "MissingLayerDigest";
})(LayerFailureCode = exports.LayerFailureCode || (exports.LayerFailureCode = {}));
var LayerAvailability;
(function (LayerAvailability) {
    LayerAvailability["AVAILABLE"] = "AVAILABLE";
    LayerAvailability["UNAVAILABLE"] = "UNAVAILABLE";
})(LayerAvailability = exports.LayerAvailability || (exports.LayerAvailability = {}));
class InvalidParameterException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
    }
}
exports.InvalidParameterException = InvalidParameterException;
class RepositoryNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryNotFoundException.prototype);
    }
}
exports.RepositoryNotFoundException = RepositoryNotFoundException;
class ServerException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServerException.prototype);
    }
}
exports.ServerException = ServerException;
var ImageFailureCode;
(function (ImageFailureCode) {
    ImageFailureCode["ImageNotFound"] = "ImageNotFound";
    ImageFailureCode["ImageReferencedByManifestList"] = "ImageReferencedByManifestList";
    ImageFailureCode["ImageTagDoesNotMatchDigest"] = "ImageTagDoesNotMatchDigest";
    ImageFailureCode["InvalidImageDigest"] = "InvalidImageDigest";
    ImageFailureCode["InvalidImageTag"] = "InvalidImageTag";
    ImageFailureCode["KmsError"] = "KmsError";
    ImageFailureCode["MissingDigestAndTag"] = "MissingDigestAndTag";
})(ImageFailureCode = exports.ImageFailureCode || (exports.ImageFailureCode = {}));
var ScanningConfigurationFailureCode;
(function (ScanningConfigurationFailureCode) {
    ScanningConfigurationFailureCode["REPOSITORY_NOT_FOUND"] = "REPOSITORY_NOT_FOUND";
})(ScanningConfigurationFailureCode = exports.ScanningConfigurationFailureCode || (exports.ScanningConfigurationFailureCode = {}));
var ScanningRepositoryFilterType;
(function (ScanningRepositoryFilterType) {
    ScanningRepositoryFilterType["WILDCARD"] = "WILDCARD";
})(ScanningRepositoryFilterType = exports.ScanningRepositoryFilterType || (exports.ScanningRepositoryFilterType = {}));
var ScanFrequency;
(function (ScanFrequency) {
    ScanFrequency["CONTINUOUS_SCAN"] = "CONTINUOUS_SCAN";
    ScanFrequency["MANUAL"] = "MANUAL";
    ScanFrequency["SCAN_ON_PUSH"] = "SCAN_ON_PUSH";
})(ScanFrequency = exports.ScanFrequency || (exports.ScanFrequency = {}));
class ValidationException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
exports.ValidationException = ValidationException;
class EmptyUploadException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "EmptyUploadException",
            $fault: "client",
            ...opts,
        });
        this.name = "EmptyUploadException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EmptyUploadException.prototype);
    }
}
exports.EmptyUploadException = EmptyUploadException;
class InvalidLayerException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidLayerException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLayerException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLayerException.prototype);
    }
}
exports.InvalidLayerException = InvalidLayerException;
class KmsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "KmsException",
            $fault: "client",
            ...opts,
        });
        this.name = "KmsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KmsException.prototype);
        this.kmsError = opts.kmsError;
    }
}
exports.KmsException = KmsException;
class LayerAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerAlreadyExistsException.prototype);
    }
}
exports.LayerAlreadyExistsException = LayerAlreadyExistsException;
class LayerPartTooSmallException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerPartTooSmallException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerPartTooSmallException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerPartTooSmallException.prototype);
    }
}
exports.LayerPartTooSmallException = LayerPartTooSmallException;
class UploadNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UploadNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "UploadNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UploadNotFoundException.prototype);
    }
}
exports.UploadNotFoundException = UploadNotFoundException;
class LimitExceededException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class PullThroughCacheRuleAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "PullThroughCacheRuleAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "PullThroughCacheRuleAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PullThroughCacheRuleAlreadyExistsException.prototype);
    }
}
exports.PullThroughCacheRuleAlreadyExistsException = PullThroughCacheRuleAlreadyExistsException;
class UnsupportedUpstreamRegistryException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedUpstreamRegistryException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedUpstreamRegistryException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedUpstreamRegistryException.prototype);
    }
}
exports.UnsupportedUpstreamRegistryException = UnsupportedUpstreamRegistryException;
var EncryptionType;
(function (EncryptionType) {
    EncryptionType["AES256"] = "AES256";
    EncryptionType["KMS"] = "KMS";
})(EncryptionType = exports.EncryptionType || (exports.EncryptionType = {}));
var ImageTagMutability;
(function (ImageTagMutability) {
    ImageTagMutability["IMMUTABLE"] = "IMMUTABLE";
    ImageTagMutability["MUTABLE"] = "MUTABLE";
})(ImageTagMutability = exports.ImageTagMutability || (exports.ImageTagMutability = {}));
class InvalidTagParameterException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidTagParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagParameterException.prototype);
    }
}
exports.InvalidTagParameterException = InvalidTagParameterException;
class RepositoryAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryAlreadyExistsException.prototype);
    }
}
exports.RepositoryAlreadyExistsException = RepositoryAlreadyExistsException;
class TooManyTagsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
exports.TooManyTagsException = TooManyTagsException;
class LifecyclePolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyNotFoundException.prototype);
    }
}
exports.LifecyclePolicyNotFoundException = LifecyclePolicyNotFoundException;
class PullThroughCacheRuleNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "PullThroughCacheRuleNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PullThroughCacheRuleNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PullThroughCacheRuleNotFoundException.prototype);
    }
}
exports.PullThroughCacheRuleNotFoundException = PullThroughCacheRuleNotFoundException;
class RegistryPolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RegistryPolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RegistryPolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RegistryPolicyNotFoundException.prototype);
    }
}
exports.RegistryPolicyNotFoundException = RegistryPolicyNotFoundException;
class RepositoryNotEmptyException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryNotEmptyException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryNotEmptyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryNotEmptyException.prototype);
    }
}
exports.RepositoryNotEmptyException = RepositoryNotEmptyException;
class RepositoryPolicyNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "RepositoryPolicyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "RepositoryPolicyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RepositoryPolicyNotFoundException.prototype);
    }
}
exports.RepositoryPolicyNotFoundException = RepositoryPolicyNotFoundException;
var ReplicationStatus;
(function (ReplicationStatus) {
    ReplicationStatus["COMPLETE"] = "COMPLETE";
    ReplicationStatus["FAILED"] = "FAILED";
    ReplicationStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(ReplicationStatus = exports.ReplicationStatus || (exports.ReplicationStatus = {}));
class ImageNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageNotFoundException.prototype);
    }
}
exports.ImageNotFoundException = ImageNotFoundException;
var TagStatus;
(function (TagStatus) {
    TagStatus["ANY"] = "ANY";
    TagStatus["TAGGED"] = "TAGGED";
    TagStatus["UNTAGGED"] = "UNTAGGED";
})(TagStatus = exports.TagStatus || (exports.TagStatus = {}));
var FindingSeverity;
(function (FindingSeverity) {
    FindingSeverity["CRITICAL"] = "CRITICAL";
    FindingSeverity["HIGH"] = "HIGH";
    FindingSeverity["INFORMATIONAL"] = "INFORMATIONAL";
    FindingSeverity["LOW"] = "LOW";
    FindingSeverity["MEDIUM"] = "MEDIUM";
    FindingSeverity["UNDEFINED"] = "UNDEFINED";
})(FindingSeverity = exports.FindingSeverity || (exports.FindingSeverity = {}));
var ScanStatus;
(function (ScanStatus) {
    ScanStatus["ACTIVE"] = "ACTIVE";
    ScanStatus["COMPLETE"] = "COMPLETE";
    ScanStatus["FAILED"] = "FAILED";
    ScanStatus["FINDINGS_UNAVAILABLE"] = "FINDINGS_UNAVAILABLE";
    ScanStatus["IN_PROGRESS"] = "IN_PROGRESS";
    ScanStatus["PENDING"] = "PENDING";
    ScanStatus["SCAN_ELIGIBILITY_EXPIRED"] = "SCAN_ELIGIBILITY_EXPIRED";
    ScanStatus["UNSUPPORTED_IMAGE"] = "UNSUPPORTED_IMAGE";
})(ScanStatus = exports.ScanStatus || (exports.ScanStatus = {}));
class ScanNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ScanNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ScanNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScanNotFoundException.prototype);
    }
}
exports.ScanNotFoundException = ScanNotFoundException;
var RepositoryFilterType;
(function (RepositoryFilterType) {
    RepositoryFilterType["PREFIX_MATCH"] = "PREFIX_MATCH";
})(RepositoryFilterType = exports.RepositoryFilterType || (exports.RepositoryFilterType = {}));
class LayerInaccessibleException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayerInaccessibleException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayerInaccessibleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayerInaccessibleException.prototype);
    }
}
exports.LayerInaccessibleException = LayerInaccessibleException;
class LayersNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LayersNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LayersNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LayersNotFoundException.prototype);
    }
}
exports.LayersNotFoundException = LayersNotFoundException;
var ImageActionType;
(function (ImageActionType) {
    ImageActionType["EXPIRE"] = "EXPIRE";
})(ImageActionType = exports.ImageActionType || (exports.ImageActionType = {}));
var LifecyclePolicyPreviewStatus;
(function (LifecyclePolicyPreviewStatus) {
    LifecyclePolicyPreviewStatus["COMPLETE"] = "COMPLETE";
    LifecyclePolicyPreviewStatus["EXPIRED"] = "EXPIRED";
    LifecyclePolicyPreviewStatus["FAILED"] = "FAILED";
    LifecyclePolicyPreviewStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(LifecyclePolicyPreviewStatus = exports.LifecyclePolicyPreviewStatus || (exports.LifecyclePolicyPreviewStatus = {}));
class LifecyclePolicyPreviewNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyPreviewNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyPreviewNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyPreviewNotFoundException.prototype);
    }
}
exports.LifecyclePolicyPreviewNotFoundException = LifecyclePolicyPreviewNotFoundException;
var ScanType;
(function (ScanType) {
    ScanType["BASIC"] = "BASIC";
    ScanType["ENHANCED"] = "ENHANCED";
})(ScanType = exports.ScanType || (exports.ScanType = {}));
class ImageAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageAlreadyExistsException.prototype);
    }
}
exports.ImageAlreadyExistsException = ImageAlreadyExistsException;
class ImageDigestDoesNotMatchException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageDigestDoesNotMatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageDigestDoesNotMatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageDigestDoesNotMatchException.prototype);
    }
}
exports.ImageDigestDoesNotMatchException = ImageDigestDoesNotMatchException;
class ImageTagAlreadyExistsException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ImageTagAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImageTagAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImageTagAlreadyExistsException.prototype);
    }
}
exports.ImageTagAlreadyExistsException = ImageTagAlreadyExistsException;
class ReferencedImagesNotFoundException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "ReferencedImagesNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReferencedImagesNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReferencedImagesNotFoundException.prototype);
    }
}
exports.ReferencedImagesNotFoundException = ReferencedImagesNotFoundException;
class UnsupportedImageTypeException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedImageTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedImageTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedImageTypeException.prototype);
    }
}
exports.UnsupportedImageTypeException = UnsupportedImageTypeException;
class LifecyclePolicyPreviewInProgressException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "LifecyclePolicyPreviewInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "LifecyclePolicyPreviewInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LifecyclePolicyPreviewInProgressException.prototype);
    }
}
exports.LifecyclePolicyPreviewInProgressException = LifecyclePolicyPreviewInProgressException;
class InvalidLayerPartException extends ECRServiceException_1.ECRServiceException {
    constructor(opts) {
        super({
            name: "InvalidLayerPartException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLayerPartException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLayerPartException.prototype);
        this.registryId = opts.registryId;
        this.repositoryName = opts.repositoryName;
        this.uploadId = opts.uploadId;
        this.lastValidByteReceived = opts.lastValidByteReceived;
    }
}
exports.InvalidLayerPartException = InvalidLayerPartException;
const BatchCheckLayerAvailabilityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchCheckLayerAvailabilityRequestFilterSensitiveLog = BatchCheckLayerAvailabilityRequestFilterSensitiveLog;
const LayerFailureFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayerFailureFilterSensitiveLog = LayerFailureFilterSensitiveLog;
const LayerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LayerFilterSensitiveLog = LayerFilterSensitiveLog;
const BatchCheckLayerAvailabilityResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchCheckLayerAvailabilityResponseFilterSensitiveLog = BatchCheckLayerAvailabilityResponseFilterSensitiveLog;
const ImageIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageIdentifierFilterSensitiveLog = ImageIdentifierFilterSensitiveLog;
const BatchDeleteImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteImageRequestFilterSensitiveLog = BatchDeleteImageRequestFilterSensitiveLog;
const ImageFailureFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageFailureFilterSensitiveLog = ImageFailureFilterSensitiveLog;
const BatchDeleteImageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteImageResponseFilterSensitiveLog = BatchDeleteImageResponseFilterSensitiveLog;
const BatchGetImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchGetImageRequestFilterSensitiveLog = BatchGetImageRequestFilterSensitiveLog;
const ImageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageFilterSensitiveLog = ImageFilterSensitiveLog;
const BatchGetImageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchGetImageResponseFilterSensitiveLog = BatchGetImageResponseFilterSensitiveLog;
const BatchGetRepositoryScanningConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchGetRepositoryScanningConfigurationRequestFilterSensitiveLog = BatchGetRepositoryScanningConfigurationRequestFilterSensitiveLog;
const RepositoryScanningConfigurationFailureFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RepositoryScanningConfigurationFailureFilterSensitiveLog = RepositoryScanningConfigurationFailureFilterSensitiveLog;
const ScanningRepositoryFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScanningRepositoryFilterFilterSensitiveLog = ScanningRepositoryFilterFilterSensitiveLog;
const RepositoryScanningConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RepositoryScanningConfigurationFilterSensitiveLog = RepositoryScanningConfigurationFilterSensitiveLog;
const BatchGetRepositoryScanningConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchGetRepositoryScanningConfigurationResponseFilterSensitiveLog = BatchGetRepositoryScanningConfigurationResponseFilterSensitiveLog;
const CompleteLayerUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CompleteLayerUploadRequestFilterSensitiveLog = CompleteLayerUploadRequestFilterSensitiveLog;
const CompleteLayerUploadResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CompleteLayerUploadResponseFilterSensitiveLog = CompleteLayerUploadResponseFilterSensitiveLog;
const CreatePullThroughCacheRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePullThroughCacheRuleRequestFilterSensitiveLog = CreatePullThroughCacheRuleRequestFilterSensitiveLog;
const CreatePullThroughCacheRuleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePullThroughCacheRuleResponseFilterSensitiveLog = CreatePullThroughCacheRuleResponseFilterSensitiveLog;
const EncryptionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EncryptionConfigurationFilterSensitiveLog = EncryptionConfigurationFilterSensitiveLog;
const ImageScanningConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageScanningConfigurationFilterSensitiveLog = ImageScanningConfigurationFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateRepositoryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRepositoryRequestFilterSensitiveLog = CreateRepositoryRequestFilterSensitiveLog;
const RepositoryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RepositoryFilterSensitiveLog = RepositoryFilterSensitiveLog;
const CreateRepositoryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRepositoryResponseFilterSensitiveLog = CreateRepositoryResponseFilterSensitiveLog;
const DeleteLifecyclePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLifecyclePolicyRequestFilterSensitiveLog = DeleteLifecyclePolicyRequestFilterSensitiveLog;
const DeleteLifecyclePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLifecyclePolicyResponseFilterSensitiveLog = DeleteLifecyclePolicyResponseFilterSensitiveLog;
const DeletePullThroughCacheRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePullThroughCacheRuleRequestFilterSensitiveLog = DeletePullThroughCacheRuleRequestFilterSensitiveLog;
const DeletePullThroughCacheRuleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePullThroughCacheRuleResponseFilterSensitiveLog = DeletePullThroughCacheRuleResponseFilterSensitiveLog;
const DeleteRegistryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRegistryPolicyRequestFilterSensitiveLog = DeleteRegistryPolicyRequestFilterSensitiveLog;
const DeleteRegistryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRegistryPolicyResponseFilterSensitiveLog = DeleteRegistryPolicyResponseFilterSensitiveLog;
const DeleteRepositoryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRepositoryRequestFilterSensitiveLog = DeleteRepositoryRequestFilterSensitiveLog;
const DeleteRepositoryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRepositoryResponseFilterSensitiveLog = DeleteRepositoryResponseFilterSensitiveLog;
const DeleteRepositoryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRepositoryPolicyRequestFilterSensitiveLog = DeleteRepositoryPolicyRequestFilterSensitiveLog;
const DeleteRepositoryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteRepositoryPolicyResponseFilterSensitiveLog = DeleteRepositoryPolicyResponseFilterSensitiveLog;
const DescribeImageReplicationStatusRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImageReplicationStatusRequestFilterSensitiveLog = DescribeImageReplicationStatusRequestFilterSensitiveLog;
const ImageReplicationStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageReplicationStatusFilterSensitiveLog = ImageReplicationStatusFilterSensitiveLog;
const DescribeImageReplicationStatusResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImageReplicationStatusResponseFilterSensitiveLog = DescribeImageReplicationStatusResponseFilterSensitiveLog;
const DescribeImagesFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImagesFilterFilterSensitiveLog = DescribeImagesFilterFilterSensitiveLog;
const DescribeImagesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImagesRequestFilterSensitiveLog = DescribeImagesRequestFilterSensitiveLog;
const ImageScanFindingsSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageScanFindingsSummaryFilterSensitiveLog = ImageScanFindingsSummaryFilterSensitiveLog;
const ImageScanStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageScanStatusFilterSensitiveLog = ImageScanStatusFilterSensitiveLog;
const ImageDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageDetailFilterSensitiveLog = ImageDetailFilterSensitiveLog;
const DescribeImagesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImagesResponseFilterSensitiveLog = DescribeImagesResponseFilterSensitiveLog;
const DescribeImageScanFindingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImageScanFindingsRequestFilterSensitiveLog = DescribeImageScanFindingsRequestFilterSensitiveLog;
const CvssScoreFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CvssScoreFilterSensitiveLog = CvssScoreFilterSensitiveLog;
const VulnerablePackageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VulnerablePackageFilterSensitiveLog = VulnerablePackageFilterSensitiveLog;
const PackageVulnerabilityDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PackageVulnerabilityDetailsFilterSensitiveLog = PackageVulnerabilityDetailsFilterSensitiveLog;
const RecommendationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RecommendationFilterSensitiveLog = RecommendationFilterSensitiveLog;
const RemediationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemediationFilterSensitiveLog = RemediationFilterSensitiveLog;
const AwsEcrContainerImageDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsEcrContainerImageDetailsFilterSensitiveLog = AwsEcrContainerImageDetailsFilterSensitiveLog;
const ResourceDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceDetailsFilterSensitiveLog = ResourceDetailsFilterSensitiveLog;
const ResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceFilterSensitiveLog = ResourceFilterSensitiveLog;
const CvssScoreAdjustmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CvssScoreAdjustmentFilterSensitiveLog = CvssScoreAdjustmentFilterSensitiveLog;
const CvssScoreDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CvssScoreDetailsFilterSensitiveLog = CvssScoreDetailsFilterSensitiveLog;
const ScoreDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScoreDetailsFilterSensitiveLog = ScoreDetailsFilterSensitiveLog;
const EnhancedImageScanFindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnhancedImageScanFindingFilterSensitiveLog = EnhancedImageScanFindingFilterSensitiveLog;
const AttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttributeFilterSensitiveLog = AttributeFilterSensitiveLog;
const ImageScanFindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageScanFindingFilterSensitiveLog = ImageScanFindingFilterSensitiveLog;
const ImageScanFindingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImageScanFindingsFilterSensitiveLog = ImageScanFindingsFilterSensitiveLog;
const DescribeImageScanFindingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImageScanFindingsResponseFilterSensitiveLog = DescribeImageScanFindingsResponseFilterSensitiveLog;
const DescribePullThroughCacheRulesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribePullThroughCacheRulesRequestFilterSensitiveLog = DescribePullThroughCacheRulesRequestFilterSensitiveLog;
const PullThroughCacheRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PullThroughCacheRuleFilterSensitiveLog = PullThroughCacheRuleFilterSensitiveLog;
const DescribePullThroughCacheRulesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribePullThroughCacheRulesResponseFilterSensitiveLog = DescribePullThroughCacheRulesResponseFilterSensitiveLog;
const DescribeRegistryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeRegistryRequestFilterSensitiveLog = DescribeRegistryRequestFilterSensitiveLog;
const ReplicationDestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicationDestinationFilterSensitiveLog = ReplicationDestinationFilterSensitiveLog;
const RepositoryFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RepositoryFilterFilterSensitiveLog = RepositoryFilterFilterSensitiveLog;
const ReplicationRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicationRuleFilterSensitiveLog = ReplicationRuleFilterSensitiveLog;
const ReplicationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicationConfigurationFilterSensitiveLog = ReplicationConfigurationFilterSensitiveLog;
const DescribeRegistryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeRegistryResponseFilterSensitiveLog = DescribeRegistryResponseFilterSensitiveLog;
const DescribeRepositoriesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeRepositoriesRequestFilterSensitiveLog = DescribeRepositoriesRequestFilterSensitiveLog;
const DescribeRepositoriesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeRepositoriesResponseFilterSensitiveLog = DescribeRepositoriesResponseFilterSensitiveLog;
const GetAuthorizationTokenRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAuthorizationTokenRequestFilterSensitiveLog = GetAuthorizationTokenRequestFilterSensitiveLog;
const AuthorizationDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizationDataFilterSensitiveLog = AuthorizationDataFilterSensitiveLog;
const GetAuthorizationTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAuthorizationTokenResponseFilterSensitiveLog = GetAuthorizationTokenResponseFilterSensitiveLog;
const GetDownloadUrlForLayerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetDownloadUrlForLayerRequestFilterSensitiveLog = GetDownloadUrlForLayerRequestFilterSensitiveLog;
const GetDownloadUrlForLayerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetDownloadUrlForLayerResponseFilterSensitiveLog = GetDownloadUrlForLayerResponseFilterSensitiveLog;
const GetLifecyclePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLifecyclePolicyRequestFilterSensitiveLog = GetLifecyclePolicyRequestFilterSensitiveLog;
const GetLifecyclePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLifecyclePolicyResponseFilterSensitiveLog = GetLifecyclePolicyResponseFilterSensitiveLog;
const LifecyclePolicyPreviewFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecyclePolicyPreviewFilterFilterSensitiveLog = LifecyclePolicyPreviewFilterFilterSensitiveLog;
const GetLifecyclePolicyPreviewRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLifecyclePolicyPreviewRequestFilterSensitiveLog = GetLifecyclePolicyPreviewRequestFilterSensitiveLog;
const LifecyclePolicyRuleActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecyclePolicyRuleActionFilterSensitiveLog = LifecyclePolicyRuleActionFilterSensitiveLog;
const LifecyclePolicyPreviewResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecyclePolicyPreviewResultFilterSensitiveLog = LifecyclePolicyPreviewResultFilterSensitiveLog;
const LifecyclePolicyPreviewSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecyclePolicyPreviewSummaryFilterSensitiveLog = LifecyclePolicyPreviewSummaryFilterSensitiveLog;
const GetLifecyclePolicyPreviewResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetLifecyclePolicyPreviewResponseFilterSensitiveLog = GetLifecyclePolicyPreviewResponseFilterSensitiveLog;
const GetRegistryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRegistryPolicyRequestFilterSensitiveLog = GetRegistryPolicyRequestFilterSensitiveLog;
const GetRegistryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRegistryPolicyResponseFilterSensitiveLog = GetRegistryPolicyResponseFilterSensitiveLog;
const GetRegistryScanningConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRegistryScanningConfigurationRequestFilterSensitiveLog = GetRegistryScanningConfigurationRequestFilterSensitiveLog;
const RegistryScanningRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegistryScanningRuleFilterSensitiveLog = RegistryScanningRuleFilterSensitiveLog;
const RegistryScanningConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegistryScanningConfigurationFilterSensitiveLog = RegistryScanningConfigurationFilterSensitiveLog;
const GetRegistryScanningConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRegistryScanningConfigurationResponseFilterSensitiveLog = GetRegistryScanningConfigurationResponseFilterSensitiveLog;
const GetRepositoryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRepositoryPolicyRequestFilterSensitiveLog = GetRepositoryPolicyRequestFilterSensitiveLog;
const GetRepositoryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetRepositoryPolicyResponseFilterSensitiveLog = GetRepositoryPolicyResponseFilterSensitiveLog;
const InitiateLayerUploadRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InitiateLayerUploadRequestFilterSensitiveLog = InitiateLayerUploadRequestFilterSensitiveLog;
const InitiateLayerUploadResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InitiateLayerUploadResponseFilterSensitiveLog = InitiateLayerUploadResponseFilterSensitiveLog;
const ListImagesFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListImagesFilterFilterSensitiveLog = ListImagesFilterFilterSensitiveLog;
const ListImagesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListImagesRequestFilterSensitiveLog = ListImagesRequestFilterSensitiveLog;
const ListImagesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListImagesResponseFilterSensitiveLog = ListImagesResponseFilterSensitiveLog;
const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceRequestFilterSensitiveLog = ListTagsForResourceRequestFilterSensitiveLog;
const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceResponseFilterSensitiveLog = ListTagsForResourceResponseFilterSensitiveLog;
const PutImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageRequestFilterSensitiveLog = PutImageRequestFilterSensitiveLog;
const PutImageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageResponseFilterSensitiveLog = PutImageResponseFilterSensitiveLog;
const PutImageScanningConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageScanningConfigurationRequestFilterSensitiveLog = PutImageScanningConfigurationRequestFilterSensitiveLog;
const PutImageScanningConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageScanningConfigurationResponseFilterSensitiveLog = PutImageScanningConfigurationResponseFilterSensitiveLog;
const PutImageTagMutabilityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageTagMutabilityRequestFilterSensitiveLog = PutImageTagMutabilityRequestFilterSensitiveLog;
const PutImageTagMutabilityResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutImageTagMutabilityResponseFilterSensitiveLog = PutImageTagMutabilityResponseFilterSensitiveLog;
const PutLifecyclePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutLifecyclePolicyRequestFilterSensitiveLog = PutLifecyclePolicyRequestFilterSensitiveLog;
const PutLifecyclePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutLifecyclePolicyResponseFilterSensitiveLog = PutLifecyclePolicyResponseFilterSensitiveLog;
const PutRegistryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRegistryPolicyRequestFilterSensitiveLog = PutRegistryPolicyRequestFilterSensitiveLog;
const PutRegistryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRegistryPolicyResponseFilterSensitiveLog = PutRegistryPolicyResponseFilterSensitiveLog;
const PutRegistryScanningConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRegistryScanningConfigurationRequestFilterSensitiveLog = PutRegistryScanningConfigurationRequestFilterSensitiveLog;
const PutRegistryScanningConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutRegistryScanningConfigurationResponseFilterSensitiveLog = PutRegistryScanningConfigurationResponseFilterSensitiveLog;
const PutReplicationConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutReplicationConfigurationRequestFilterSensitiveLog = PutReplicationConfigurationRequestFilterSensitiveLog;
const PutReplicationConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutReplicationConfigurationResponseFilterSensitiveLog = PutReplicationConfigurationResponseFilterSensitiveLog;
const SetRepositoryPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetRepositoryPolicyRequestFilterSensitiveLog = SetRepositoryPolicyRequestFilterSensitiveLog;
const SetRepositoryPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetRepositoryPolicyResponseFilterSensitiveLog = SetRepositoryPolicyResponseFilterSensitiveLog;
const StartImageScanRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartImageScanRequestFilterSensitiveLog = StartImageScanRequestFilterSensitiveLog;
const StartImageScanResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartImageScanResponseFilterSensitiveLog = StartImageScanResponseFilterSensitiveLog;
const StartLifecyclePolicyPreviewRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartLifecyclePolicyPreviewRequestFilterSensitiveLog = StartLifecyclePolicyPreviewRequestFilterSensitiveLog;
const StartLifecyclePolicyPreviewResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartLifecyclePolicyPreviewResponseFilterSensitiveLog = StartLifecyclePolicyPreviewResponseFilterSensitiveLog;
const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceRequestFilterSensitiveLog = TagResourceRequestFilterSensitiveLog;
const TagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceResponseFilterSensitiveLog = TagResourceResponseFilterSensitiveLog;
const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceRequestFilterSensitiveLog = UntagResourceRequestFilterSensitiveLog;
const UntagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceResponseFilterSensitiveLog = UntagResourceResponseFilterSensitiveLog;
const UploadLayerPartRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadLayerPartRequestFilterSensitiveLog = UploadLayerPartRequestFilterSensitiveLog;
const UploadLayerPartResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadLayerPartResponseFilterSensitiveLog = UploadLayerPartResponseFilterSensitiveLog;
