"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadSSHPublicKeyResponseFilterSensitiveLog = exports.UploadSSHPublicKeyRequestFilterSensitiveLog = exports.UploadSigningCertificateResponseFilterSensitiveLog = exports.UploadSigningCertificateRequestFilterSensitiveLog = exports.UploadServerCertificateResponseFilterSensitiveLog = exports.UploadServerCertificateRequestFilterSensitiveLog = exports.UpdateUserRequestFilterSensitiveLog = exports.UpdateSSHPublicKeyRequestFilterSensitiveLog = exports.UpdateSigningCertificateRequestFilterSensitiveLog = exports.UpdateServiceSpecificCredentialRequestFilterSensitiveLog = exports.UpdateServerCertificateRequestFilterSensitiveLog = exports.UpdateSAMLProviderResponseFilterSensitiveLog = exports.UpdateSAMLProviderRequestFilterSensitiveLog = exports.UpdateRoleDescriptionResponseFilterSensitiveLog = exports.UpdateRoleDescriptionRequestFilterSensitiveLog = exports.UpdateRoleResponseFilterSensitiveLog = exports.UpdateRoleRequestFilterSensitiveLog = exports.UpdateOpenIDConnectProviderThumbprintRequestFilterSensitiveLog = exports.UpdateLoginProfileRequestFilterSensitiveLog = exports.UpdateGroupRequestFilterSensitiveLog = exports.UpdateAssumeRolePolicyRequestFilterSensitiveLog = exports.UpdateAccountPasswordPolicyRequestFilterSensitiveLog = exports.UpdateAccessKeyRequestFilterSensitiveLog = exports.UntagUserRequestFilterSensitiveLog = exports.UntagServerCertificateRequestFilterSensitiveLog = exports.UntagSAMLProviderRequestFilterSensitiveLog = exports.UntagRoleRequestFilterSensitiveLog = exports.UntagPolicyRequestFilterSensitiveLog = exports.InvalidPublicKeyException = exports.DuplicateSSHPublicKeyException = exports.InvalidCertificateException = exports.DuplicateCertificateException = exports.MalformedCertificateException = exports.KeyPairMismatchException = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const IAMServiceException_1 = require("./IAMServiceException");
class KeyPairMismatchException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "KeyPairMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "KeyPairMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeyPairMismatchException.prototype);
    }
}
exports.KeyPairMismatchException = KeyPairMismatchException;
class MalformedCertificateException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "MalformedCertificateException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedCertificateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedCertificateException.prototype);
    }
}
exports.MalformedCertificateException = MalformedCertificateException;
class DuplicateCertificateException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "DuplicateCertificateException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateCertificateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateCertificateException.prototype);
    }
}
exports.DuplicateCertificateException = DuplicateCertificateException;
class InvalidCertificateException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "InvalidCertificateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCertificateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCertificateException.prototype);
    }
}
exports.InvalidCertificateException = InvalidCertificateException;
class DuplicateSSHPublicKeyException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "DuplicateSSHPublicKeyException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateSSHPublicKeyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateSSHPublicKeyException.prototype);
    }
}
exports.DuplicateSSHPublicKeyException = DuplicateSSHPublicKeyException;
class InvalidPublicKeyException extends IAMServiceException_1.IAMServiceException {
    constructor(opts) {
        super({
            name: "InvalidPublicKeyException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPublicKeyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPublicKeyException.prototype);
    }
}
exports.InvalidPublicKeyException = InvalidPublicKeyException;
const UntagPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagPolicyRequestFilterSensitiveLog = UntagPolicyRequestFilterSensitiveLog;
const UntagRoleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagRoleRequestFilterSensitiveLog = UntagRoleRequestFilterSensitiveLog;
const UntagSAMLProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagSAMLProviderRequestFilterSensitiveLog = UntagSAMLProviderRequestFilterSensitiveLog;
const UntagServerCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagServerCertificateRequestFilterSensitiveLog = UntagServerCertificateRequestFilterSensitiveLog;
const UntagUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagUserRequestFilterSensitiveLog = UntagUserRequestFilterSensitiveLog;
const UpdateAccessKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateAccessKeyRequestFilterSensitiveLog = UpdateAccessKeyRequestFilterSensitiveLog;
const UpdateAccountPasswordPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateAccountPasswordPolicyRequestFilterSensitiveLog = UpdateAccountPasswordPolicyRequestFilterSensitiveLog;
const UpdateAssumeRolePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateAssumeRolePolicyRequestFilterSensitiveLog = UpdateAssumeRolePolicyRequestFilterSensitiveLog;
const UpdateGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGroupRequestFilterSensitiveLog = UpdateGroupRequestFilterSensitiveLog;
const UpdateLoginProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: smithy_client_1.SENSITIVE_STRING }),
});
exports.UpdateLoginProfileRequestFilterSensitiveLog = UpdateLoginProfileRequestFilterSensitiveLog;
const UpdateOpenIDConnectProviderThumbprintRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateOpenIDConnectProviderThumbprintRequestFilterSensitiveLog = UpdateOpenIDConnectProviderThumbprintRequestFilterSensitiveLog;
const UpdateRoleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateRoleRequestFilterSensitiveLog = UpdateRoleRequestFilterSensitiveLog;
const UpdateRoleResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateRoleResponseFilterSensitiveLog = UpdateRoleResponseFilterSensitiveLog;
const UpdateRoleDescriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateRoleDescriptionRequestFilterSensitiveLog = UpdateRoleDescriptionRequestFilterSensitiveLog;
const UpdateRoleDescriptionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateRoleDescriptionResponseFilterSensitiveLog = UpdateRoleDescriptionResponseFilterSensitiveLog;
const UpdateSAMLProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSAMLProviderRequestFilterSensitiveLog = UpdateSAMLProviderRequestFilterSensitiveLog;
const UpdateSAMLProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSAMLProviderResponseFilterSensitiveLog = UpdateSAMLProviderResponseFilterSensitiveLog;
const UpdateServerCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateServerCertificateRequestFilterSensitiveLog = UpdateServerCertificateRequestFilterSensitiveLog;
const UpdateServiceSpecificCredentialRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateServiceSpecificCredentialRequestFilterSensitiveLog = UpdateServiceSpecificCredentialRequestFilterSensitiveLog;
const UpdateSigningCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSigningCertificateRequestFilterSensitiveLog = UpdateSigningCertificateRequestFilterSensitiveLog;
const UpdateSSHPublicKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateSSHPublicKeyRequestFilterSensitiveLog = UpdateSSHPublicKeyRequestFilterSensitiveLog;
const UpdateUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateUserRequestFilterSensitiveLog = UpdateUserRequestFilterSensitiveLog;
const UploadServerCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateKey && { PrivateKey: smithy_client_1.SENSITIVE_STRING }),
});
exports.UploadServerCertificateRequestFilterSensitiveLog = UploadServerCertificateRequestFilterSensitiveLog;
const UploadServerCertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadServerCertificateResponseFilterSensitiveLog = UploadServerCertificateResponseFilterSensitiveLog;
const UploadSigningCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadSigningCertificateRequestFilterSensitiveLog = UploadSigningCertificateRequestFilterSensitiveLog;
const UploadSigningCertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadSigningCertificateResponseFilterSensitiveLog = UploadSigningCertificateResponseFilterSensitiveLog;
const UploadSSHPublicKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadSSHPublicKeyRequestFilterSensitiveLog = UploadSSHPublicKeyRequestFilterSensitiveLog;
const UploadSSHPublicKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UploadSSHPublicKeyResponseFilterSensitiveLog = UploadSSHPublicKeyResponseFilterSensitiveLog;
